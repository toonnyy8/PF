'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Base = function () {
  function Base(kernel, name) {
    _classCallCheck(this, Base);

    this.kernel = kernel;
    this.location = null;
    this.name = name;
    this._value = null;
  }

  _createClass(Base, [{
    key: 'getDeclarationString',
    value: function getDeclarationString() {
      throw new Error('getDeclarationString not defined on base variable');
    }
  }, {
    key: 'getLocation',
    value: function getLocation() {
      throw new Error('getLocation not defined on base variable');
    }
  }, {
    key: 'setNativeValue',
    value: function setNativeValue(value) {
      throw new Error('setNativeValue not defined on base variable');
    }
  }, {
    key: 'value',
    get: function get() {
      return this._value;
    },
    set: function set(value) {
      this._value = value;
      this.setNativeValue(value);
    }
  }]);

  return Base;
}();

exports.default = Base;